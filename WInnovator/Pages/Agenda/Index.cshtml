@page
@model WInnovator.Pages.Agenda.IndexModel

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
</head>
<body>
    @if (Model.DesignShops.Count() == 0)
    {
        <div class="alert alert-info" role="alert">
            <strong>Er zijn geen geplande DesignShops aanwezig.</strong>
        </div>
    }
    else
    {
        <div class="row">
            <div class="col-md-4">
                <form method="post">
                    <div class="form-group">
                        <label class="control-label">Toon agenda van DesignShop</label>
                        @Html.DropDownListFor(x => x.CurrentDesignShop, Model.DesignShops, new { @class = "form-control", onchange = "this.form.submit();" })
                    </div>
                </form>
            </div>
        </div>
        @if (Model.DesignShopWorkingForm != null)
        {
            <form method="post">
                <a class="btn btn-outline-info" id="copyToClipboard" data-clipboard-target="#DesignShopAgenda">Kopieer tabel naar Klikbord</a> |
                <input type="submit" value="Volgend werkvorm instellen als actief" asp-route-designshopId="@Model.DesignShopWorkingForm[0].DesignShopId" asp-page-handler="Next" class="btn btn-success" />
            </form>

            <table id="DesignShopAgenda" class="table">
                <thead>
                    <tr>
                        <th>
                            Starttijd
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DesignShopWorkingForm[0].WorkingForm)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DesignShopWorkingForm[0].Implementer)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DesignShopWorkingForm[0].PhaseId)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DesignShopWorkingForm[0].TimeAllocated)
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.DesignShopWorkingForm)
                    {
                        <tr class="@(item.IsCurrentWorkingForm ? "table-info" : "")">
                            <td rowspan="2">
                                @item.DesignShop.Starttime.Add(TimeSpan.FromMinutes(Model.DesignShopWorkingForm.Where(wf => wf.Order < item.Order).Sum(wf => wf.TimeAllocated))).ToString(@"hh\:mm")
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.WorkingForm.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Implementer)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Phase.Name)
                            </td>
                            <td>
                                @TimeSpan.FromMinutes(item.TimeAllocated).ToString(@"hh\:mm")
                            </td>
                        </tr>
                        <tr class="@(item.IsCurrentWorkingForm ? "table-info" : "")">
                            <td colspan="4">
                                @Html.DisplayFor(modelItem => item.Resume)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    }

    @section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
        <script>
            $(document).ready(function () {
                $('#copyToClipboard').click(function () {
                    var el = document.getElementById("DesignShopAgenda");
                    var body = document.body, range, sel;
                    if (document.createRange && window.getSelection) {
                        range = document.createRange();
                        sel = window.getSelection();
                        sel.removeAllRanges();
                        try {
                            range.selectNodeContents(el);
                            sel.addRange(range);
                        } catch (e) {
                            range.selectNode(el);
                            sel.addRange(range);
                        }
                    } else if (body.createTextRange) {
                        range = body.createTextRange();
                        range.moveToElementText(el);
                        range.select();
                    }
                    document.execCommand('copy');
                    window.getSelection().removeAllRanges();
                });
            });
        </script>
    }

</body>
</html>
